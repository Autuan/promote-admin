<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autuan.project.promote.task.mapper.TabTaskMapper">
  <resultMap id="BaseResultMap" type="com.autuan.project.promote.task.domain.TabTask">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="prefix" jdbcType="VARCHAR" property="prefix" />
    <result column="param_id" jdbcType="VARCHAR" property="paramId" />
    <result column="reward" jdbcType="DECIMAL" property="reward" />
    <result column="reward_begin_time" jdbcType="TIMESTAMP" property="rewardBeginTime" />
    <result column="reward_stop_time" jdbcType="TIMESTAMP" property="rewardStopTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="bg_img" jdbcType="VARCHAR" property="bgImg" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="code_prefix" jdbcType="VARCHAR" property="codePrefix" />
    <result column="code_prefix_digit" jdbcType="INTEGER" property="codePrefixDigit" />
    <result column="assign_type" jdbcType="INTEGER" property="assignType" />
    <result column="index_name" jdbcType="VARCHAR" property="indexName" />
    <result column="is_hidden" jdbcType="INTEGER" property="isHidden" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, prefix, param_id, reward, reward_begin_time, reward_stop_time, create_time, 
    update_time, create_by, update_by, tags, article_id, priority, article_title, image, 
    bg_img, summary, code_prefix, code_prefix_digit, assign_type, index_name, is_hidden
  </sql>
  <select id="selectByExample" parameterType="com.autuan.project.promote.task.domain.TabTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_task
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tab_task
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.autuan.project.promote.task.domain.TabTaskExample">
    delete from tab_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.autuan.project.promote.task.domain.TabTask">
    insert into tab_task (id, name, prefix, 
      param_id, reward, reward_begin_time, 
      reward_stop_time, create_time, update_time, 
      create_by, update_by, tags, 
      article_id, priority, article_title, 
      image, bg_img, summary, 
      code_prefix, code_prefix_digit, assign_type, 
      index_name, is_hidden)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{prefix,jdbcType=VARCHAR}, 
      #{paramId,jdbcType=VARCHAR}, #{reward,jdbcType=DECIMAL}, #{rewardBeginTime,jdbcType=TIMESTAMP}, 
      #{rewardStopTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, 
      #{articleId,jdbcType=VARCHAR}, #{priority,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{bgImg,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{codePrefix,jdbcType=VARCHAR}, #{codePrefixDigit,jdbcType=INTEGER}, #{assignType,jdbcType=INTEGER}, 
      #{indexName,jdbcType=VARCHAR}, #{isHidden,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into tab_task
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.prefix != null">
            prefix,
          </if>
          <if test="record.paramId != null">
            param_id,
          </if>
          <if test="record.reward != null">
            reward,
          </if>
          <if test="record.rewardBeginTime != null">
            reward_begin_time,
          </if>
          <if test="record.rewardStopTime != null">
            reward_stop_time,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.tags != null">
            tags,
          </if>
          <if test="record.articleId != null">
            article_id,
          </if>
          <if test="record.priority != null">
            priority,
          </if>
          <if test="record.articleTitle != null">
            article_title,
          </if>
          <if test="record.image != null">
            image,
          </if>
          <if test="record.bgImg != null">
            bg_img,
          </if>
          <if test="record.summary != null">
            summary,
          </if>
          <if test="record.codePrefix != null">
            code_prefix,
          </if>
          <if test="record.codePrefixDigit != null">
            code_prefix_digit,
          </if>
          <if test="record.assignType != null">
            assign_type,
          </if>
          <if test="record.indexName != null">
            index_name,
          </if>
          <if test="record.isHidden != null">
            is_hidden,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.prefix != null">
            #{record.prefix,jdbcType=VARCHAR},
          </if>
          <if test="record.paramId != null">
            #{record.paramId,jdbcType=VARCHAR},
          </if>
          <if test="record.reward != null">
            #{record.reward,jdbcType=DECIMAL},
          </if>
          <if test="record.rewardBeginTime != null">
            #{record.rewardBeginTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.rewardStopTime != null">
            #{record.rewardStopTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.tags != null">
            #{record.tags,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            #{record.articleId,jdbcType=VARCHAR},
          </if>
          <if test="record.priority != null">
            #{record.priority,jdbcType=INTEGER},
          </if>
          <if test="record.articleTitle != null">
            #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.image != null">
            #{record.image,jdbcType=VARCHAR},
          </if>
          <if test="record.bgImg != null">
            #{record.bgImg,jdbcType=VARCHAR},
          </if>
          <if test="record.summary != null">
            #{record.summary,jdbcType=VARCHAR},
          </if>
          <if test="record.codePrefix != null">
            #{record.codePrefix,jdbcType=VARCHAR},
          </if>
          <if test="record.codePrefixDigit != null">
            #{record.codePrefixDigit,jdbcType=INTEGER},
          </if>
          <if test="record.assignType != null">
            #{record.assignType,jdbcType=INTEGER},
          </if>
          <if test="record.indexName != null">
            #{record.indexName,jdbcType=VARCHAR},
          </if>
          <if test="record.isHidden != null">
            #{record.isHidden,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.autuan.project.promote.task.domain.TabTaskExample" resultType="java.lang.Long">
    select count(*) from tab_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_task
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.prefix != null">
            prefix = #{record.prefix,jdbcType=VARCHAR},
          </if>
          <if test="record.paramId != null">
            param_id = #{record.paramId,jdbcType=VARCHAR},
          </if>
          <if test="record.reward != null">
            reward = #{record.reward,jdbcType=DECIMAL},
          </if>
          <if test="record.rewardBeginTime != null">
            reward_begin_time = #{record.rewardBeginTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.rewardStopTime != null">
            reward_stop_time = #{record.rewardStopTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.tags != null">
            tags = #{record.tags,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            article_id = #{record.articleId,jdbcType=VARCHAR},
          </if>
          <if test="record.priority != null">
            priority = #{record.priority,jdbcType=INTEGER},
          </if>
          <if test="record.articleTitle != null">
            article_title = #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.image != null">
            image = #{record.image,jdbcType=VARCHAR},
          </if>
          <if test="record.bgImg != null">
            bg_img = #{record.bgImg,jdbcType=VARCHAR},
          </if>
          <if test="record.summary != null">
            summary = #{record.summary,jdbcType=VARCHAR},
          </if>
          <if test="record.codePrefix != null">
            code_prefix = #{record.codePrefix,jdbcType=VARCHAR},
          </if>
          <if test="record.codePrefixDigit != null">
            code_prefix_digit = #{record.codePrefixDigit,jdbcType=INTEGER},
          </if>
          <if test="record.assignType != null">
            assign_type = #{record.assignType,jdbcType=INTEGER},
          </if>
          <if test="record.indexName != null">
            index_name = #{record.indexName,jdbcType=VARCHAR},
          </if>
          <if test="record.isHidden != null">
            is_hidden = #{record.isHidden,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_task
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      prefix = #{record.prefix,jdbcType=VARCHAR},
      param_id = #{record.paramId,jdbcType=VARCHAR},
      reward = #{record.reward,jdbcType=DECIMAL},
      reward_begin_time = #{record.rewardBeginTime,jdbcType=TIMESTAMP},
      reward_stop_time = #{record.rewardStopTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      article_id = #{record.articleId,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=INTEGER},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      bg_img = #{record.bgImg,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      code_prefix = #{record.codePrefix,jdbcType=VARCHAR},
      code_prefix_digit = #{record.codePrefixDigit,jdbcType=INTEGER},
      assign_type = #{record.assignType,jdbcType=INTEGER},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      is_hidden = #{record.isHidden,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tab_task
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.prefix != null">
            prefix = #{record.prefix,jdbcType=VARCHAR},
          </if>
          <if test="record.paramId != null">
            param_id = #{record.paramId,jdbcType=VARCHAR},
          </if>
          <if test="record.reward != null">
            reward = #{record.reward,jdbcType=DECIMAL},
          </if>
          <if test="record.rewardBeginTime != null">
            reward_begin_time = #{record.rewardBeginTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.rewardStopTime != null">
            reward_stop_time = #{record.rewardStopTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.tags != null">
            tags = #{record.tags,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            article_id = #{record.articleId,jdbcType=VARCHAR},
          </if>
          <if test="record.priority != null">
            priority = #{record.priority,jdbcType=INTEGER},
          </if>
          <if test="record.articleTitle != null">
            article_title = #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.image != null">
            image = #{record.image,jdbcType=VARCHAR},
          </if>
          <if test="record.bgImg != null">
            bg_img = #{record.bgImg,jdbcType=VARCHAR},
          </if>
          <if test="record.summary != null">
            summary = #{record.summary,jdbcType=VARCHAR},
          </if>
          <if test="record.codePrefix != null">
            code_prefix = #{record.codePrefix,jdbcType=VARCHAR},
          </if>
          <if test="record.codePrefixDigit != null">
            code_prefix_digit = #{record.codePrefixDigit,jdbcType=INTEGER},
          </if>
          <if test="record.assignType != null">
            assign_type = #{record.assignType,jdbcType=INTEGER},
          </if>
          <if test="record.indexName != null">
            index_name = #{record.indexName,jdbcType=VARCHAR},
          </if>
          <if test="record.isHidden != null">
            is_hidden = #{record.isHidden,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autuan.project.promote.task.domain.TabTask">
    update tab_task
    set name = #{name,jdbcType=VARCHAR},
      prefix = #{prefix,jdbcType=VARCHAR},
      param_id = #{paramId,jdbcType=VARCHAR},
      reward = #{reward,jdbcType=DECIMAL},
      reward_begin_time = #{rewardBeginTime,jdbcType=TIMESTAMP},
      reward_stop_time = #{rewardStopTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      article_id = #{articleId,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      bg_img = #{bgImg,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      code_prefix = #{codePrefix,jdbcType=VARCHAR},
      code_prefix_digit = #{codePrefixDigit,jdbcType=INTEGER},
      assign_type = #{assignType,jdbcType=INTEGER},
      index_name = #{indexName,jdbcType=VARCHAR},
      is_hidden = #{isHidden,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="com.autuan.project.promote.task.domain.TabTaskExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tab_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into tab_task
    (id, name, prefix, param_id, reward, reward_begin_time, reward_stop_time, create_time, 
      update_time, create_by, update_by, tags, article_id, priority, article_title, image, 
      bg_img, summary, code_prefix, code_prefix_digit, assign_type, index_name, is_hidden
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.prefix,jdbcType=VARCHAR}, 
        #{item.paramId,jdbcType=VARCHAR}, #{item.reward,jdbcType=DECIMAL}, #{item.rewardBeginTime,jdbcType=TIMESTAMP}, 
        #{item.rewardStopTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=VARCHAR}, #{item.updateBy,jdbcType=VARCHAR}, 
        #{item.tags,jdbcType=VARCHAR}, #{item.articleId,jdbcType=VARCHAR}, #{item.priority,jdbcType=INTEGER}, 
        #{item.articleTitle,jdbcType=VARCHAR}, #{item.image,jdbcType=VARCHAR}, #{item.bgImg,jdbcType=VARCHAR}, 
        #{item.summary,jdbcType=VARCHAR}, #{item.codePrefix,jdbcType=VARCHAR}, #{item.codePrefixDigit,jdbcType=INTEGER}, 
        #{item.assignType,jdbcType=INTEGER}, #{item.indexName,jdbcType=VARCHAR}, #{item.isHidden,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into tab_task (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'prefix'.toString() == column.value">
          #{item.prefix,jdbcType=VARCHAR}
        </if>
        <if test="'param_id'.toString() == column.value">
          #{item.paramId,jdbcType=VARCHAR}
        </if>
        <if test="'reward'.toString() == column.value">
          #{item.reward,jdbcType=DECIMAL}
        </if>
        <if test="'reward_begin_time'.toString() == column.value">
          #{item.rewardBeginTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'reward_stop_time'.toString() == column.value">
          #{item.rewardStopTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=VARCHAR}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=VARCHAR}
        </if>
        <if test="'tags'.toString() == column.value">
          #{item.tags,jdbcType=VARCHAR}
        </if>
        <if test="'article_id'.toString() == column.value">
          #{item.articleId,jdbcType=VARCHAR}
        </if>
        <if test="'priority'.toString() == column.value">
          #{item.priority,jdbcType=INTEGER}
        </if>
        <if test="'article_title'.toString() == column.value">
          #{item.articleTitle,jdbcType=VARCHAR}
        </if>
        <if test="'image'.toString() == column.value">
          #{item.image,jdbcType=VARCHAR}
        </if>
        <if test="'bg_img'.toString() == column.value">
          #{item.bgImg,jdbcType=VARCHAR}
        </if>
        <if test="'summary'.toString() == column.value">
          #{item.summary,jdbcType=VARCHAR}
        </if>
        <if test="'code_prefix'.toString() == column.value">
          #{item.codePrefix,jdbcType=VARCHAR}
        </if>
        <if test="'code_prefix_digit'.toString() == column.value">
          #{item.codePrefixDigit,jdbcType=INTEGER}
        </if>
        <if test="'assign_type'.toString() == column.value">
          #{item.assignType,jdbcType=INTEGER}
        </if>
        <if test="'index_name'.toString() == column.value">
          #{item.indexName,jdbcType=VARCHAR}
        </if>
        <if test="'is_hidden'.toString() == column.value">
          #{item.isHidden,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>