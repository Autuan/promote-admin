<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autuan.project.promote.salesman.mapper.TabSalesmanMapper">
  <resultMap id="BaseResultMap" type="com.autuan.project.promote.salesman.domain.TabSalesman">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="brokerage_bank_no" jdbcType="VARCHAR" property="brokerageBankNo" />
    <result column="brokerage_bank_name" jdbcType="VARCHAR" property="brokerageBankName" />
    <result column="brokerage_bank_address" jdbcType="VARCHAR" property="brokerageBankAddress" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="identify_number" jdbcType="VARCHAR" property="identifyNumber" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, brokerage_bank_no, brokerage_bank_name, brokerage_bank_address, name, mobile, 
    create_time, update_time, create_by, update_by, password, identify_number, apply_time, 
    level, group_id, education, gender, head_img
  </sql>
  <select id="selectByExample" parameterType="com.autuan.project.promote.salesman.domain.TabSalesmanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_salesman
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_salesman
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tab_salesman
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.autuan.project.promote.salesman.domain.TabSalesmanExample">
    delete from tab_salesman
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.autuan.project.promote.salesman.domain.TabSalesman">
    insert into tab_salesman (id, brokerage_bank_no, brokerage_bank_name, 
      brokerage_bank_address, name, mobile, 
      create_time, update_time, create_by, 
      update_by, password, identify_number, 
      apply_time, level, group_id, 
      education, gender, head_img
      )
    values (#{id,jdbcType=VARCHAR}, #{brokerageBankNo,jdbcType=VARCHAR}, #{brokerageBankName,jdbcType=VARCHAR}, 
      #{brokerageBankAddress,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateBy,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{identifyNumber,jdbcType=VARCHAR}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{level,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{headImg,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into tab_salesman
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.brokerageBankNo != null">
            brokerage_bank_no,
          </if>
          <if test="record.brokerageBankName != null">
            brokerage_bank_name,
          </if>
          <if test="record.brokerageBankAddress != null">
            brokerage_bank_address,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.mobile != null">
            mobile,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.password != null">
            password,
          </if>
          <if test="record.identifyNumber != null">
            identify_number,
          </if>
          <if test="record.applyTime != null">
            apply_time,
          </if>
          <if test="record.level != null">
            level,
          </if>
          <if test="record.groupId != null">
            group_id,
          </if>
          <if test="record.education != null">
            education,
          </if>
          <if test="record.gender != null">
            gender,
          </if>
          <if test="record.headImg != null">
            head_img,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.brokerageBankNo != null">
            #{record.brokerageBankNo,jdbcType=VARCHAR},
          </if>
          <if test="record.brokerageBankName != null">
            #{record.brokerageBankName,jdbcType=VARCHAR},
          </if>
          <if test="record.brokerageBankAddress != null">
            #{record.brokerageBankAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.mobile != null">
            #{record.mobile,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.password != null">
            #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.identifyNumber != null">
            #{record.identifyNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.applyTime != null">
            #{record.applyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.level != null">
            #{record.level,jdbcType=VARCHAR},
          </if>
          <if test="record.groupId != null">
            #{record.groupId,jdbcType=VARCHAR},
          </if>
          <if test="record.education != null">
            #{record.education,jdbcType=VARCHAR},
          </if>
          <if test="record.gender != null">
            #{record.gender,jdbcType=INTEGER},
          </if>
          <if test="record.headImg != null">
            #{record.headImg,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.autuan.project.promote.salesman.domain.TabSalesmanExample" resultType="java.lang.Long">
    select count(*) from tab_salesman
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_salesman
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.brokerageBankNo != null">
            brokerage_bank_no = #{record.brokerageBankNo,jdbcType=VARCHAR},
          </if>
          <if test="record.brokerageBankName != null">
            brokerage_bank_name = #{record.brokerageBankName,jdbcType=VARCHAR},
          </if>
          <if test="record.brokerageBankAddress != null">
            brokerage_bank_address = #{record.brokerageBankAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.mobile != null">
            mobile = #{record.mobile,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.password != null">
            password = #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.identifyNumber != null">
            identify_number = #{record.identifyNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.applyTime != null">
            apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.level != null">
            level = #{record.level,jdbcType=VARCHAR},
          </if>
          <if test="record.groupId != null">
            group_id = #{record.groupId,jdbcType=VARCHAR},
          </if>
          <if test="record.education != null">
            education = #{record.education,jdbcType=VARCHAR},
          </if>
          <if test="record.gender != null">
            gender = #{record.gender,jdbcType=INTEGER},
          </if>
          <if test="record.headImg != null">
            head_img = #{record.headImg,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_salesman
    set id = #{record.id,jdbcType=VARCHAR},
      brokerage_bank_no = #{record.brokerageBankNo,jdbcType=VARCHAR},
      brokerage_bank_name = #{record.brokerageBankName,jdbcType=VARCHAR},
      brokerage_bank_address = #{record.brokerageBankAddress,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      identify_number = #{record.identifyNumber,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      level = #{record.level,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      head_img = #{record.headImg,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tab_salesman
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.brokerageBankNo != null">
            brokerage_bank_no = #{record.brokerageBankNo,jdbcType=VARCHAR},
          </if>
          <if test="record.brokerageBankName != null">
            brokerage_bank_name = #{record.brokerageBankName,jdbcType=VARCHAR},
          </if>
          <if test="record.brokerageBankAddress != null">
            brokerage_bank_address = #{record.brokerageBankAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.mobile != null">
            mobile = #{record.mobile,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.password != null">
            password = #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.identifyNumber != null">
            identify_number = #{record.identifyNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.applyTime != null">
            apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.level != null">
            level = #{record.level,jdbcType=VARCHAR},
          </if>
          <if test="record.groupId != null">
            group_id = #{record.groupId,jdbcType=VARCHAR},
          </if>
          <if test="record.education != null">
            education = #{record.education,jdbcType=VARCHAR},
          </if>
          <if test="record.gender != null">
            gender = #{record.gender,jdbcType=INTEGER},
          </if>
          <if test="record.headImg != null">
            head_img = #{record.headImg,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autuan.project.promote.salesman.domain.TabSalesman">
    update tab_salesman
    set brokerage_bank_no = #{brokerageBankNo,jdbcType=VARCHAR},
      brokerage_bank_name = #{brokerageBankName,jdbcType=VARCHAR},
      brokerage_bank_address = #{brokerageBankAddress,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      identify_number = #{identifyNumber,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      level = #{level,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      head_img = #{headImg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="com.autuan.project.promote.salesman.domain.TabSalesmanExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tab_salesman
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into tab_salesman
    (id, brokerage_bank_no, brokerage_bank_name, brokerage_bank_address, name, mobile, 
      create_time, update_time, create_by, update_by, password, identify_number, apply_time, 
      level, group_id, education, gender, head_img)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.brokerageBankNo,jdbcType=VARCHAR}, #{item.brokerageBankName,jdbcType=VARCHAR}, 
        #{item.brokerageBankAddress,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=VARCHAR}, 
        #{item.updateBy,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.identifyNumber,jdbcType=VARCHAR}, 
        #{item.applyTime,jdbcType=TIMESTAMP}, #{item.level,jdbcType=VARCHAR}, #{item.groupId,jdbcType=VARCHAR}, 
        #{item.education,jdbcType=VARCHAR}, #{item.gender,jdbcType=INTEGER}, #{item.headImg,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into tab_salesman (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=VARCHAR}
        </if>
        <if test="'brokerage_bank_no'.toString() == column.value">
          #{item.brokerageBankNo,jdbcType=VARCHAR}
        </if>
        <if test="'brokerage_bank_name'.toString() == column.value">
          #{item.brokerageBankName,jdbcType=VARCHAR}
        </if>
        <if test="'brokerage_bank_address'.toString() == column.value">
          #{item.brokerageBankAddress,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'mobile'.toString() == column.value">
          #{item.mobile,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=VARCHAR}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=VARCHAR}
        </if>
        <if test="'password'.toString() == column.value">
          #{item.password,jdbcType=VARCHAR}
        </if>
        <if test="'identify_number'.toString() == column.value">
          #{item.identifyNumber,jdbcType=VARCHAR}
        </if>
        <if test="'apply_time'.toString() == column.value">
          #{item.applyTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'level'.toString() == column.value">
          #{item.level,jdbcType=VARCHAR}
        </if>
        <if test="'group_id'.toString() == column.value">
          #{item.groupId,jdbcType=VARCHAR}
        </if>
        <if test="'education'.toString() == column.value">
          #{item.education,jdbcType=VARCHAR}
        </if>
        <if test="'gender'.toString() == column.value">
          #{item.gender,jdbcType=INTEGER}
        </if>
        <if test="'head_img'.toString() == column.value">
          #{item.headImg,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>