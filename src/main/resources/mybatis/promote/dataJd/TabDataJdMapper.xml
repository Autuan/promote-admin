<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autuan.project.promote.dataJd.mapper.TabDataJdMapper">
  <resultMap id="BaseResultMap" type="com.autuan.project.promote.dataJd.domain.TabDataJd">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="record_time" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="task_inner_id" jdbcType="VARCHAR" property="taskInnerId" />
    <result column="task_url" jdbcType="VARCHAR" property="taskUrl" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_name" jdbcType="VARCHAR" property="orderName" />
    <result column="channel_first" jdbcType="VARCHAR" property="channelFirst" />
    <result column="channel_below_source" jdbcType="VARCHAR" property="channelBelowSource" />
    <result column="check_status" jdbcType="INTEGER" property="checkStatus" />
    <result column="check_reason" jdbcType="VARCHAR" property="checkReason" />
    <result column="join_jd_pin" jdbcType="VARCHAR" property="joinJdPin" />
    <result column="join_link" jdbcType="VARCHAR" property="joinLink" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="join_order" jdbcType="VARCHAR" property="joinOrder" />
    <result column="open_jd_credit_pin" jdbcType="VARCHAR" property="openJdCreditPin" />
    <result column="open_jd_credit_url" jdbcType="VARCHAR" property="openJdCreditUrl" />
    <result column="open_jd_credit_time" jdbcType="TIMESTAMP" property="openJdCreditTime" />
    <result column="open_jd_credit_type" jdbcType="INTEGER" property="openJdCreditType" />
    <result column="jd_credit_first_order_no" jdbcType="VARCHAR" property="jdCreditFirstOrderNo" />
    <result column="jd_credit_first_order_pin" jdbcType="VARCHAR" property="jdCreditFirstOrderPin" />
    <result column="jd_credit_first_order_time" jdbcType="TIMESTAMP" property="jdCreditFirstOrderTime" />
    <result column="jd_credit_first_order_url" jdbcType="VARCHAR" property="jdCreditFirstOrderUrl" />
    <result column="bank_and_order_no" jdbcType="VARCHAR" property="bankAndOrderNo" />
    <result column="bank_and_pin" jdbcType="VARCHAR" property="bankAndPin" />
    <result column="bank_and_income_money" jdbcType="VARCHAR" property="bankAndIncomeMoney" />
    <result column="bank_and_income_time" jdbcType="TIMESTAMP" property="bankAndIncomeTime" />
    <result column="bank_and_promote_url" jdbcType="VARCHAR" property="bankAndPromoteUrl" />
    <result column="joined_first_order_with_jd_credit_time_difference" jdbcType="VARCHAR" property="joinedFirstOrderWithJdCreditTimeDifference" />
    <result column="joined_first_order_with_bank_income_time_difference" jdbcType="VARCHAR" property="joinedFirstOrderWithBankIncomeTimeDifference" />
    <result column="jd_credit_open_one_day" jdbcType="INTEGER" property="jdCreditOpenOneDay" />
    <result column="newbie_package_oper_time" jdbcType="TIMESTAMP" property="newbiePackageOperTime" />
    <result column="newbie_package_pin" jdbcType="VARCHAR" property="newbiePackagePin" />
    <result column="newbie_package_url_id" jdbcType="VARCHAR" property="newbiePackageUrlId" />
    <result column="newbie_package_result" jdbcType="INTEGER" property="newbiePackageResult" />
    <result column="jd_gold_order_no" jdbcType="VARCHAR" property="jdGoldOrderNo" />
    <result column="jd_gold_is_first" jdbcType="INTEGER" property="jdGoldIsFirst" />
    <result column="jd_gold_confirm_time" jdbcType="TIMESTAMP" property="jdGoldConfirmTime" />
    <result column="jd_new_hand_reward_id" jdbcType="VARCHAR" property="jdNewHandRewardId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="salesman_id" jdbcType="VARCHAR" property="salesmanId" />
    <result column="reward" jdbcType="DECIMAL" property="reward" />
    <result column="channel_below" jdbcType="VARCHAR" property="channelBelow" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, record_time, task_inner_id, task_url, order_no, order_name, channel_first, channel_below_source, 
    check_status, check_reason, join_jd_pin, join_link, join_time, join_order, open_jd_credit_pin, 
    open_jd_credit_url, open_jd_credit_time, open_jd_credit_type, jd_credit_first_order_no, 
    jd_credit_first_order_pin, jd_credit_first_order_time, jd_credit_first_order_url, 
    bank_and_order_no, bank_and_pin, bank_and_income_money, bank_and_income_time, bank_and_promote_url, 
    joined_first_order_with_jd_credit_time_difference, joined_first_order_with_bank_income_time_difference, 
    jd_credit_open_one_day, newbie_package_oper_time, newbie_package_pin, newbie_package_url_id, 
    newbie_package_result, jd_gold_order_no, jd_gold_is_first, jd_gold_confirm_time, 
    jd_new_hand_reward_id, create_time, update_time, create_by, update_by, task_id, salesman_id, 
    reward, channel_below
  </sql>
  <select id="selectByExample" parameterType="com.autuan.project.promote.dataJd.domain.TabDataJdExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_data_jd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_data_jd
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tab_data_jd
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.autuan.project.promote.dataJd.domain.TabDataJdExample">
    delete from tab_data_jd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.autuan.project.promote.dataJd.domain.TabDataJd">
    insert into tab_data_jd (id, record_time, task_inner_id, 
      task_url, order_no, order_name, 
      channel_first, channel_below_source, check_status, 
      check_reason, join_jd_pin, join_link, 
      join_time, join_order, open_jd_credit_pin, 
      open_jd_credit_url, open_jd_credit_time, open_jd_credit_type, 
      jd_credit_first_order_no, jd_credit_first_order_pin, 
      jd_credit_first_order_time, jd_credit_first_order_url, 
      bank_and_order_no, bank_and_pin, bank_and_income_money, 
      bank_and_income_time, bank_and_promote_url, 
      joined_first_order_with_jd_credit_time_difference, joined_first_order_with_bank_income_time_difference, 
      jd_credit_open_one_day, newbie_package_oper_time, 
      newbie_package_pin, newbie_package_url_id, newbie_package_result, 
      jd_gold_order_no, jd_gold_is_first, jd_gold_confirm_time, 
      jd_new_hand_reward_id, create_time, update_time, 
      create_by, update_by, task_id, 
      salesman_id, reward, channel_below
      )
    values (#{id,jdbcType=VARCHAR}, #{recordTime,jdbcType=TIMESTAMP}, #{taskInnerId,jdbcType=VARCHAR}, 
      #{taskUrl,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{orderName,jdbcType=VARCHAR}, 
      #{channelFirst,jdbcType=VARCHAR}, #{channelBelowSource,jdbcType=VARCHAR}, #{checkStatus,jdbcType=INTEGER}, 
      #{checkReason,jdbcType=VARCHAR}, #{joinJdPin,jdbcType=VARCHAR}, #{joinLink,jdbcType=VARCHAR}, 
      #{joinTime,jdbcType=TIMESTAMP}, #{joinOrder,jdbcType=VARCHAR}, #{openJdCreditPin,jdbcType=VARCHAR}, 
      #{openJdCreditUrl,jdbcType=VARCHAR}, #{openJdCreditTime,jdbcType=TIMESTAMP}, #{openJdCreditType,jdbcType=INTEGER}, 
      #{jdCreditFirstOrderNo,jdbcType=VARCHAR}, #{jdCreditFirstOrderPin,jdbcType=VARCHAR}, 
      #{jdCreditFirstOrderTime,jdbcType=TIMESTAMP}, #{jdCreditFirstOrderUrl,jdbcType=VARCHAR}, 
      #{bankAndOrderNo,jdbcType=VARCHAR}, #{bankAndPin,jdbcType=VARCHAR}, #{bankAndIncomeMoney,jdbcType=VARCHAR}, 
      #{bankAndIncomeTime,jdbcType=TIMESTAMP}, #{bankAndPromoteUrl,jdbcType=VARCHAR}, 
      #{joinedFirstOrderWithJdCreditTimeDifference,jdbcType=VARCHAR}, #{joinedFirstOrderWithBankIncomeTimeDifference,jdbcType=VARCHAR}, 
      #{jdCreditOpenOneDay,jdbcType=INTEGER}, #{newbiePackageOperTime,jdbcType=TIMESTAMP}, 
      #{newbiePackagePin,jdbcType=VARCHAR}, #{newbiePackageUrlId,jdbcType=VARCHAR}, #{newbiePackageResult,jdbcType=INTEGER}, 
      #{jdGoldOrderNo,jdbcType=VARCHAR}, #{jdGoldIsFirst,jdbcType=INTEGER}, #{jdGoldConfirmTime,jdbcType=TIMESTAMP}, 
      #{jdNewHandRewardId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, 
      #{salesmanId,jdbcType=VARCHAR}, #{reward,jdbcType=DECIMAL}, #{channelBelow,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into tab_data_jd
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.recordTime != null">
            record_time,
          </if>
          <if test="record.taskInnerId != null">
            task_inner_id,
          </if>
          <if test="record.taskUrl != null">
            task_url,
          </if>
          <if test="record.orderNo != null">
            order_no,
          </if>
          <if test="record.orderName != null">
            order_name,
          </if>
          <if test="record.channelFirst != null">
            channel_first,
          </if>
          <if test="record.channelBelowSource != null">
            channel_below_source,
          </if>
          <if test="record.checkStatus != null">
            check_status,
          </if>
          <if test="record.checkReason != null">
            check_reason,
          </if>
          <if test="record.joinJdPin != null">
            join_jd_pin,
          </if>
          <if test="record.joinLink != null">
            join_link,
          </if>
          <if test="record.joinTime != null">
            join_time,
          </if>
          <if test="record.joinOrder != null">
            join_order,
          </if>
          <if test="record.openJdCreditPin != null">
            open_jd_credit_pin,
          </if>
          <if test="record.openJdCreditUrl != null">
            open_jd_credit_url,
          </if>
          <if test="record.openJdCreditTime != null">
            open_jd_credit_time,
          </if>
          <if test="record.openJdCreditType != null">
            open_jd_credit_type,
          </if>
          <if test="record.jdCreditFirstOrderNo != null">
            jd_credit_first_order_no,
          </if>
          <if test="record.jdCreditFirstOrderPin != null">
            jd_credit_first_order_pin,
          </if>
          <if test="record.jdCreditFirstOrderTime != null">
            jd_credit_first_order_time,
          </if>
          <if test="record.jdCreditFirstOrderUrl != null">
            jd_credit_first_order_url,
          </if>
          <if test="record.bankAndOrderNo != null">
            bank_and_order_no,
          </if>
          <if test="record.bankAndPin != null">
            bank_and_pin,
          </if>
          <if test="record.bankAndIncomeMoney != null">
            bank_and_income_money,
          </if>
          <if test="record.bankAndIncomeTime != null">
            bank_and_income_time,
          </if>
          <if test="record.bankAndPromoteUrl != null">
            bank_and_promote_url,
          </if>
          <if test="record.joinedFirstOrderWithJdCreditTimeDifference != null">
            joined_first_order_with_jd_credit_time_difference,
          </if>
          <if test="record.joinedFirstOrderWithBankIncomeTimeDifference != null">
            joined_first_order_with_bank_income_time_difference,
          </if>
          <if test="record.jdCreditOpenOneDay != null">
            jd_credit_open_one_day,
          </if>
          <if test="record.newbiePackageOperTime != null">
            newbie_package_oper_time,
          </if>
          <if test="record.newbiePackagePin != null">
            newbie_package_pin,
          </if>
          <if test="record.newbiePackageUrlId != null">
            newbie_package_url_id,
          </if>
          <if test="record.newbiePackageResult != null">
            newbie_package_result,
          </if>
          <if test="record.jdGoldOrderNo != null">
            jd_gold_order_no,
          </if>
          <if test="record.jdGoldIsFirst != null">
            jd_gold_is_first,
          </if>
          <if test="record.jdGoldConfirmTime != null">
            jd_gold_confirm_time,
          </if>
          <if test="record.jdNewHandRewardId != null">
            jd_new_hand_reward_id,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.taskId != null">
            task_id,
          </if>
          <if test="record.salesmanId != null">
            salesman_id,
          </if>
          <if test="record.reward != null">
            reward,
          </if>
          <if test="record.channelBelow != null">
            channel_below,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.recordTime != null">
            #{record.recordTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.taskInnerId != null">
            #{record.taskInnerId,jdbcType=VARCHAR},
          </if>
          <if test="record.taskUrl != null">
            #{record.taskUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.orderNo != null">
            #{record.orderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.orderName != null">
            #{record.orderName,jdbcType=VARCHAR},
          </if>
          <if test="record.channelFirst != null">
            #{record.channelFirst,jdbcType=VARCHAR},
          </if>
          <if test="record.channelBelowSource != null">
            #{record.channelBelowSource,jdbcType=VARCHAR},
          </if>
          <if test="record.checkStatus != null">
            #{record.checkStatus,jdbcType=INTEGER},
          </if>
          <if test="record.checkReason != null">
            #{record.checkReason,jdbcType=VARCHAR},
          </if>
          <if test="record.joinJdPin != null">
            #{record.joinJdPin,jdbcType=VARCHAR},
          </if>
          <if test="record.joinLink != null">
            #{record.joinLink,jdbcType=VARCHAR},
          </if>
          <if test="record.joinTime != null">
            #{record.joinTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.joinOrder != null">
            #{record.joinOrder,jdbcType=VARCHAR},
          </if>
          <if test="record.openJdCreditPin != null">
            #{record.openJdCreditPin,jdbcType=VARCHAR},
          </if>
          <if test="record.openJdCreditUrl != null">
            #{record.openJdCreditUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.openJdCreditTime != null">
            #{record.openJdCreditTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.openJdCreditType != null">
            #{record.openJdCreditType,jdbcType=INTEGER},
          </if>
          <if test="record.jdCreditFirstOrderNo != null">
            #{record.jdCreditFirstOrderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.jdCreditFirstOrderPin != null">
            #{record.jdCreditFirstOrderPin,jdbcType=VARCHAR},
          </if>
          <if test="record.jdCreditFirstOrderTime != null">
            #{record.jdCreditFirstOrderTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.jdCreditFirstOrderUrl != null">
            #{record.jdCreditFirstOrderUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndOrderNo != null">
            #{record.bankAndOrderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndPin != null">
            #{record.bankAndPin,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndIncomeMoney != null">
            #{record.bankAndIncomeMoney,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndIncomeTime != null">
            #{record.bankAndIncomeTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bankAndPromoteUrl != null">
            #{record.bankAndPromoteUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.joinedFirstOrderWithJdCreditTimeDifference != null">
            #{record.joinedFirstOrderWithJdCreditTimeDifference,jdbcType=VARCHAR},
          </if>
          <if test="record.joinedFirstOrderWithBankIncomeTimeDifference != null">
            #{record.joinedFirstOrderWithBankIncomeTimeDifference,jdbcType=VARCHAR},
          </if>
          <if test="record.jdCreditOpenOneDay != null">
            #{record.jdCreditOpenOneDay,jdbcType=INTEGER},
          </if>
          <if test="record.newbiePackageOperTime != null">
            #{record.newbiePackageOperTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.newbiePackagePin != null">
            #{record.newbiePackagePin,jdbcType=VARCHAR},
          </if>
          <if test="record.newbiePackageUrlId != null">
            #{record.newbiePackageUrlId,jdbcType=VARCHAR},
          </if>
          <if test="record.newbiePackageResult != null">
            #{record.newbiePackageResult,jdbcType=INTEGER},
          </if>
          <if test="record.jdGoldOrderNo != null">
            #{record.jdGoldOrderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.jdGoldIsFirst != null">
            #{record.jdGoldIsFirst,jdbcType=INTEGER},
          </if>
          <if test="record.jdGoldConfirmTime != null">
            #{record.jdGoldConfirmTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.jdNewHandRewardId != null">
            #{record.jdNewHandRewardId,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.taskId != null">
            #{record.taskId,jdbcType=VARCHAR},
          </if>
          <if test="record.salesmanId != null">
            #{record.salesmanId,jdbcType=VARCHAR},
          </if>
          <if test="record.reward != null">
            #{record.reward,jdbcType=DECIMAL},
          </if>
          <if test="record.channelBelow != null">
            #{record.channelBelow,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.autuan.project.promote.dataJd.domain.TabDataJdExample" resultType="java.lang.Long">
    select count(*) from tab_data_jd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_data_jd
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=VARCHAR},
          </if>
          <if test="record.recordTime != null">
            record_time = #{record.recordTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.taskInnerId != null">
            task_inner_id = #{record.taskInnerId,jdbcType=VARCHAR},
          </if>
          <if test="record.taskUrl != null">
            task_url = #{record.taskUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.orderNo != null">
            order_no = #{record.orderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.orderName != null">
            order_name = #{record.orderName,jdbcType=VARCHAR},
          </if>
          <if test="record.channelFirst != null">
            channel_first = #{record.channelFirst,jdbcType=VARCHAR},
          </if>
          <if test="record.channelBelowSource != null">
            channel_below_source = #{record.channelBelowSource,jdbcType=VARCHAR},
          </if>
          <if test="record.checkStatus != null">
            check_status = #{record.checkStatus,jdbcType=INTEGER},
          </if>
          <if test="record.checkReason != null">
            check_reason = #{record.checkReason,jdbcType=VARCHAR},
          </if>
          <if test="record.joinJdPin != null">
            join_jd_pin = #{record.joinJdPin,jdbcType=VARCHAR},
          </if>
          <if test="record.joinLink != null">
            join_link = #{record.joinLink,jdbcType=VARCHAR},
          </if>
          <if test="record.joinTime != null">
            join_time = #{record.joinTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.joinOrder != null">
            join_order = #{record.joinOrder,jdbcType=VARCHAR},
          </if>
          <if test="record.openJdCreditPin != null">
            open_jd_credit_pin = #{record.openJdCreditPin,jdbcType=VARCHAR},
          </if>
          <if test="record.openJdCreditUrl != null">
            open_jd_credit_url = #{record.openJdCreditUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.openJdCreditTime != null">
            open_jd_credit_time = #{record.openJdCreditTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.openJdCreditType != null">
            open_jd_credit_type = #{record.openJdCreditType,jdbcType=INTEGER},
          </if>
          <if test="record.jdCreditFirstOrderNo != null">
            jd_credit_first_order_no = #{record.jdCreditFirstOrderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.jdCreditFirstOrderPin != null">
            jd_credit_first_order_pin = #{record.jdCreditFirstOrderPin,jdbcType=VARCHAR},
          </if>
          <if test="record.jdCreditFirstOrderTime != null">
            jd_credit_first_order_time = #{record.jdCreditFirstOrderTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.jdCreditFirstOrderUrl != null">
            jd_credit_first_order_url = #{record.jdCreditFirstOrderUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndOrderNo != null">
            bank_and_order_no = #{record.bankAndOrderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndPin != null">
            bank_and_pin = #{record.bankAndPin,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndIncomeMoney != null">
            bank_and_income_money = #{record.bankAndIncomeMoney,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndIncomeTime != null">
            bank_and_income_time = #{record.bankAndIncomeTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bankAndPromoteUrl != null">
            bank_and_promote_url = #{record.bankAndPromoteUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.joinedFirstOrderWithJdCreditTimeDifference != null">
            joined_first_order_with_jd_credit_time_difference = #{record.joinedFirstOrderWithJdCreditTimeDifference,jdbcType=VARCHAR},
          </if>
          <if test="record.joinedFirstOrderWithBankIncomeTimeDifference != null">
            joined_first_order_with_bank_income_time_difference = #{record.joinedFirstOrderWithBankIncomeTimeDifference,jdbcType=VARCHAR},
          </if>
          <if test="record.jdCreditOpenOneDay != null">
            jd_credit_open_one_day = #{record.jdCreditOpenOneDay,jdbcType=INTEGER},
          </if>
          <if test="record.newbiePackageOperTime != null">
            newbie_package_oper_time = #{record.newbiePackageOperTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.newbiePackagePin != null">
            newbie_package_pin = #{record.newbiePackagePin,jdbcType=VARCHAR},
          </if>
          <if test="record.newbiePackageUrlId != null">
            newbie_package_url_id = #{record.newbiePackageUrlId,jdbcType=VARCHAR},
          </if>
          <if test="record.newbiePackageResult != null">
            newbie_package_result = #{record.newbiePackageResult,jdbcType=INTEGER},
          </if>
          <if test="record.jdGoldOrderNo != null">
            jd_gold_order_no = #{record.jdGoldOrderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.jdGoldIsFirst != null">
            jd_gold_is_first = #{record.jdGoldIsFirst,jdbcType=INTEGER},
          </if>
          <if test="record.jdGoldConfirmTime != null">
            jd_gold_confirm_time = #{record.jdGoldConfirmTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.jdNewHandRewardId != null">
            jd_new_hand_reward_id = #{record.jdNewHandRewardId,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.taskId != null">
            task_id = #{record.taskId,jdbcType=VARCHAR},
          </if>
          <if test="record.salesmanId != null">
            salesman_id = #{record.salesmanId,jdbcType=VARCHAR},
          </if>
          <if test="record.reward != null">
            reward = #{record.reward,jdbcType=DECIMAL},
          </if>
          <if test="record.channelBelow != null">
            channel_below = #{record.channelBelow,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_data_jd
    set id = #{record.id,jdbcType=VARCHAR},
      record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      task_inner_id = #{record.taskInnerId,jdbcType=VARCHAR},
      task_url = #{record.taskUrl,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      order_name = #{record.orderName,jdbcType=VARCHAR},
      channel_first = #{record.channelFirst,jdbcType=VARCHAR},
      channel_below_source = #{record.channelBelowSource,jdbcType=VARCHAR},
      check_status = #{record.checkStatus,jdbcType=INTEGER},
      check_reason = #{record.checkReason,jdbcType=VARCHAR},
      join_jd_pin = #{record.joinJdPin,jdbcType=VARCHAR},
      join_link = #{record.joinLink,jdbcType=VARCHAR},
      join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      join_order = #{record.joinOrder,jdbcType=VARCHAR},
      open_jd_credit_pin = #{record.openJdCreditPin,jdbcType=VARCHAR},
      open_jd_credit_url = #{record.openJdCreditUrl,jdbcType=VARCHAR},
      open_jd_credit_time = #{record.openJdCreditTime,jdbcType=TIMESTAMP},
      open_jd_credit_type = #{record.openJdCreditType,jdbcType=INTEGER},
      jd_credit_first_order_no = #{record.jdCreditFirstOrderNo,jdbcType=VARCHAR},
      jd_credit_first_order_pin = #{record.jdCreditFirstOrderPin,jdbcType=VARCHAR},
      jd_credit_first_order_time = #{record.jdCreditFirstOrderTime,jdbcType=TIMESTAMP},
      jd_credit_first_order_url = #{record.jdCreditFirstOrderUrl,jdbcType=VARCHAR},
      bank_and_order_no = #{record.bankAndOrderNo,jdbcType=VARCHAR},
      bank_and_pin = #{record.bankAndPin,jdbcType=VARCHAR},
      bank_and_income_money = #{record.bankAndIncomeMoney,jdbcType=VARCHAR},
      bank_and_income_time = #{record.bankAndIncomeTime,jdbcType=TIMESTAMP},
      bank_and_promote_url = #{record.bankAndPromoteUrl,jdbcType=VARCHAR},
      joined_first_order_with_jd_credit_time_difference = #{record.joinedFirstOrderWithJdCreditTimeDifference,jdbcType=VARCHAR},
      joined_first_order_with_bank_income_time_difference = #{record.joinedFirstOrderWithBankIncomeTimeDifference,jdbcType=VARCHAR},
      jd_credit_open_one_day = #{record.jdCreditOpenOneDay,jdbcType=INTEGER},
      newbie_package_oper_time = #{record.newbiePackageOperTime,jdbcType=TIMESTAMP},
      newbie_package_pin = #{record.newbiePackagePin,jdbcType=VARCHAR},
      newbie_package_url_id = #{record.newbiePackageUrlId,jdbcType=VARCHAR},
      newbie_package_result = #{record.newbiePackageResult,jdbcType=INTEGER},
      jd_gold_order_no = #{record.jdGoldOrderNo,jdbcType=VARCHAR},
      jd_gold_is_first = #{record.jdGoldIsFirst,jdbcType=INTEGER},
      jd_gold_confirm_time = #{record.jdGoldConfirmTime,jdbcType=TIMESTAMP},
      jd_new_hand_reward_id = #{record.jdNewHandRewardId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      task_id = #{record.taskId,jdbcType=VARCHAR},
      salesman_id = #{record.salesmanId,jdbcType=VARCHAR},
      reward = #{record.reward,jdbcType=DECIMAL},
      channel_below = #{record.channelBelow,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tab_data_jd
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.recordTime != null">
            record_time = #{record.recordTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.taskInnerId != null">
            task_inner_id = #{record.taskInnerId,jdbcType=VARCHAR},
          </if>
          <if test="record.taskUrl != null">
            task_url = #{record.taskUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.orderNo != null">
            order_no = #{record.orderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.orderName != null">
            order_name = #{record.orderName,jdbcType=VARCHAR},
          </if>
          <if test="record.channelFirst != null">
            channel_first = #{record.channelFirst,jdbcType=VARCHAR},
          </if>
          <if test="record.channelBelowSource != null">
            channel_below_source = #{record.channelBelowSource,jdbcType=VARCHAR},
          </if>
          <if test="record.checkStatus != null">
            check_status = #{record.checkStatus,jdbcType=INTEGER},
          </if>
          <if test="record.checkReason != null">
            check_reason = #{record.checkReason,jdbcType=VARCHAR},
          </if>
          <if test="record.joinJdPin != null">
            join_jd_pin = #{record.joinJdPin,jdbcType=VARCHAR},
          </if>
          <if test="record.joinLink != null">
            join_link = #{record.joinLink,jdbcType=VARCHAR},
          </if>
          <if test="record.joinTime != null">
            join_time = #{record.joinTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.joinOrder != null">
            join_order = #{record.joinOrder,jdbcType=VARCHAR},
          </if>
          <if test="record.openJdCreditPin != null">
            open_jd_credit_pin = #{record.openJdCreditPin,jdbcType=VARCHAR},
          </if>
          <if test="record.openJdCreditUrl != null">
            open_jd_credit_url = #{record.openJdCreditUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.openJdCreditTime != null">
            open_jd_credit_time = #{record.openJdCreditTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.openJdCreditType != null">
            open_jd_credit_type = #{record.openJdCreditType,jdbcType=INTEGER},
          </if>
          <if test="record.jdCreditFirstOrderNo != null">
            jd_credit_first_order_no = #{record.jdCreditFirstOrderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.jdCreditFirstOrderPin != null">
            jd_credit_first_order_pin = #{record.jdCreditFirstOrderPin,jdbcType=VARCHAR},
          </if>
          <if test="record.jdCreditFirstOrderTime != null">
            jd_credit_first_order_time = #{record.jdCreditFirstOrderTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.jdCreditFirstOrderUrl != null">
            jd_credit_first_order_url = #{record.jdCreditFirstOrderUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndOrderNo != null">
            bank_and_order_no = #{record.bankAndOrderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndPin != null">
            bank_and_pin = #{record.bankAndPin,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndIncomeMoney != null">
            bank_and_income_money = #{record.bankAndIncomeMoney,jdbcType=VARCHAR},
          </if>
          <if test="record.bankAndIncomeTime != null">
            bank_and_income_time = #{record.bankAndIncomeTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bankAndPromoteUrl != null">
            bank_and_promote_url = #{record.bankAndPromoteUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.joinedFirstOrderWithJdCreditTimeDifference != null">
            joined_first_order_with_jd_credit_time_difference = #{record.joinedFirstOrderWithJdCreditTimeDifference,jdbcType=VARCHAR},
          </if>
          <if test="record.joinedFirstOrderWithBankIncomeTimeDifference != null">
            joined_first_order_with_bank_income_time_difference = #{record.joinedFirstOrderWithBankIncomeTimeDifference,jdbcType=VARCHAR},
          </if>
          <if test="record.jdCreditOpenOneDay != null">
            jd_credit_open_one_day = #{record.jdCreditOpenOneDay,jdbcType=INTEGER},
          </if>
          <if test="record.newbiePackageOperTime != null">
            newbie_package_oper_time = #{record.newbiePackageOperTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.newbiePackagePin != null">
            newbie_package_pin = #{record.newbiePackagePin,jdbcType=VARCHAR},
          </if>
          <if test="record.newbiePackageUrlId != null">
            newbie_package_url_id = #{record.newbiePackageUrlId,jdbcType=VARCHAR},
          </if>
          <if test="record.newbiePackageResult != null">
            newbie_package_result = #{record.newbiePackageResult,jdbcType=INTEGER},
          </if>
          <if test="record.jdGoldOrderNo != null">
            jd_gold_order_no = #{record.jdGoldOrderNo,jdbcType=VARCHAR},
          </if>
          <if test="record.jdGoldIsFirst != null">
            jd_gold_is_first = #{record.jdGoldIsFirst,jdbcType=INTEGER},
          </if>
          <if test="record.jdGoldConfirmTime != null">
            jd_gold_confirm_time = #{record.jdGoldConfirmTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.jdNewHandRewardId != null">
            jd_new_hand_reward_id = #{record.jdNewHandRewardId,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.taskId != null">
            task_id = #{record.taskId,jdbcType=VARCHAR},
          </if>
          <if test="record.salesmanId != null">
            salesman_id = #{record.salesmanId,jdbcType=VARCHAR},
          </if>
          <if test="record.reward != null">
            reward = #{record.reward,jdbcType=DECIMAL},
          </if>
          <if test="record.channelBelow != null">
            channel_below = #{record.channelBelow,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autuan.project.promote.dataJd.domain.TabDataJd">
    update tab_data_jd
    set record_time = #{recordTime,jdbcType=TIMESTAMP},
      task_inner_id = #{taskInnerId,jdbcType=VARCHAR},
      task_url = #{taskUrl,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      order_name = #{orderName,jdbcType=VARCHAR},
      channel_first = #{channelFirst,jdbcType=VARCHAR},
      channel_below_source = #{channelBelowSource,jdbcType=VARCHAR},
      check_status = #{checkStatus,jdbcType=INTEGER},
      check_reason = #{checkReason,jdbcType=VARCHAR},
      join_jd_pin = #{joinJdPin,jdbcType=VARCHAR},
      join_link = #{joinLink,jdbcType=VARCHAR},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      join_order = #{joinOrder,jdbcType=VARCHAR},
      open_jd_credit_pin = #{openJdCreditPin,jdbcType=VARCHAR},
      open_jd_credit_url = #{openJdCreditUrl,jdbcType=VARCHAR},
      open_jd_credit_time = #{openJdCreditTime,jdbcType=TIMESTAMP},
      open_jd_credit_type = #{openJdCreditType,jdbcType=INTEGER},
      jd_credit_first_order_no = #{jdCreditFirstOrderNo,jdbcType=VARCHAR},
      jd_credit_first_order_pin = #{jdCreditFirstOrderPin,jdbcType=VARCHAR},
      jd_credit_first_order_time = #{jdCreditFirstOrderTime,jdbcType=TIMESTAMP},
      jd_credit_first_order_url = #{jdCreditFirstOrderUrl,jdbcType=VARCHAR},
      bank_and_order_no = #{bankAndOrderNo,jdbcType=VARCHAR},
      bank_and_pin = #{bankAndPin,jdbcType=VARCHAR},
      bank_and_income_money = #{bankAndIncomeMoney,jdbcType=VARCHAR},
      bank_and_income_time = #{bankAndIncomeTime,jdbcType=TIMESTAMP},
      bank_and_promote_url = #{bankAndPromoteUrl,jdbcType=VARCHAR},
      joined_first_order_with_jd_credit_time_difference = #{joinedFirstOrderWithJdCreditTimeDifference,jdbcType=VARCHAR},
      joined_first_order_with_bank_income_time_difference = #{joinedFirstOrderWithBankIncomeTimeDifference,jdbcType=VARCHAR},
      jd_credit_open_one_day = #{jdCreditOpenOneDay,jdbcType=INTEGER},
      newbie_package_oper_time = #{newbiePackageOperTime,jdbcType=TIMESTAMP},
      newbie_package_pin = #{newbiePackagePin,jdbcType=VARCHAR},
      newbie_package_url_id = #{newbiePackageUrlId,jdbcType=VARCHAR},
      newbie_package_result = #{newbiePackageResult,jdbcType=INTEGER},
      jd_gold_order_no = #{jdGoldOrderNo,jdbcType=VARCHAR},
      jd_gold_is_first = #{jdGoldIsFirst,jdbcType=INTEGER},
      jd_gold_confirm_time = #{jdGoldConfirmTime,jdbcType=TIMESTAMP},
      jd_new_hand_reward_id = #{jdNewHandRewardId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=VARCHAR},
      salesman_id = #{salesmanId,jdbcType=VARCHAR},
      reward = #{reward,jdbcType=DECIMAL},
      channel_below = #{channelBelow,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="com.autuan.project.promote.dataJd.domain.TabDataJdExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tab_data_jd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into tab_data_jd
    (id, record_time, task_inner_id, task_url, order_no, order_name, channel_first, channel_below_source, 
      check_status, check_reason, join_jd_pin, join_link, join_time, join_order, open_jd_credit_pin, 
      open_jd_credit_url, open_jd_credit_time, open_jd_credit_type, jd_credit_first_order_no, 
      jd_credit_first_order_pin, jd_credit_first_order_time, jd_credit_first_order_url, 
      bank_and_order_no, bank_and_pin, bank_and_income_money, bank_and_income_time, bank_and_promote_url, 
      joined_first_order_with_jd_credit_time_difference, joined_first_order_with_bank_income_time_difference, 
      jd_credit_open_one_day, newbie_package_oper_time, newbie_package_pin, newbie_package_url_id, 
      newbie_package_result, jd_gold_order_no, jd_gold_is_first, jd_gold_confirm_time, 
      jd_new_hand_reward_id, create_time, update_time, create_by, update_by, task_id, 
      salesman_id, reward, channel_below)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.recordTime,jdbcType=TIMESTAMP}, #{item.taskInnerId,jdbcType=VARCHAR}, 
        #{item.taskUrl,jdbcType=VARCHAR}, #{item.orderNo,jdbcType=VARCHAR}, #{item.orderName,jdbcType=VARCHAR}, 
        #{item.channelFirst,jdbcType=VARCHAR}, #{item.channelBelowSource,jdbcType=VARCHAR}, 
        #{item.checkStatus,jdbcType=INTEGER}, #{item.checkReason,jdbcType=VARCHAR}, #{item.joinJdPin,jdbcType=VARCHAR}, 
        #{item.joinLink,jdbcType=VARCHAR}, #{item.joinTime,jdbcType=TIMESTAMP}, #{item.joinOrder,jdbcType=VARCHAR}, 
        #{item.openJdCreditPin,jdbcType=VARCHAR}, #{item.openJdCreditUrl,jdbcType=VARCHAR}, 
        #{item.openJdCreditTime,jdbcType=TIMESTAMP}, #{item.openJdCreditType,jdbcType=INTEGER}, 
        #{item.jdCreditFirstOrderNo,jdbcType=VARCHAR}, #{item.jdCreditFirstOrderPin,jdbcType=VARCHAR}, 
        #{item.jdCreditFirstOrderTime,jdbcType=TIMESTAMP}, #{item.jdCreditFirstOrderUrl,jdbcType=VARCHAR}, 
        #{item.bankAndOrderNo,jdbcType=VARCHAR}, #{item.bankAndPin,jdbcType=VARCHAR}, #{item.bankAndIncomeMoney,jdbcType=VARCHAR}, 
        #{item.bankAndIncomeTime,jdbcType=TIMESTAMP}, #{item.bankAndPromoteUrl,jdbcType=VARCHAR}, 
        #{item.joinedFirstOrderWithJdCreditTimeDifference,jdbcType=VARCHAR}, #{item.joinedFirstOrderWithBankIncomeTimeDifference,jdbcType=VARCHAR}, 
        #{item.jdCreditOpenOneDay,jdbcType=INTEGER}, #{item.newbiePackageOperTime,jdbcType=TIMESTAMP}, 
        #{item.newbiePackagePin,jdbcType=VARCHAR}, #{item.newbiePackageUrlId,jdbcType=VARCHAR}, 
        #{item.newbiePackageResult,jdbcType=INTEGER}, #{item.jdGoldOrderNo,jdbcType=VARCHAR}, 
        #{item.jdGoldIsFirst,jdbcType=INTEGER}, #{item.jdGoldConfirmTime,jdbcType=TIMESTAMP}, 
        #{item.jdNewHandRewardId,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=VARCHAR}, #{item.updateBy,jdbcType=VARCHAR}, 
        #{item.taskId,jdbcType=VARCHAR}, #{item.salesmanId,jdbcType=VARCHAR}, #{item.reward,jdbcType=DECIMAL}, 
        #{item.channelBelow,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into tab_data_jd (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=VARCHAR}
        </if>
        <if test="'record_time'.toString() == column.value">
          #{item.recordTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'task_inner_id'.toString() == column.value">
          #{item.taskInnerId,jdbcType=VARCHAR}
        </if>
        <if test="'task_url'.toString() == column.value">
          #{item.taskUrl,jdbcType=VARCHAR}
        </if>
        <if test="'order_no'.toString() == column.value">
          #{item.orderNo,jdbcType=VARCHAR}
        </if>
        <if test="'order_name'.toString() == column.value">
          #{item.orderName,jdbcType=VARCHAR}
        </if>
        <if test="'channel_first'.toString() == column.value">
          #{item.channelFirst,jdbcType=VARCHAR}
        </if>
        <if test="'channel_below_source'.toString() == column.value">
          #{item.channelBelowSource,jdbcType=VARCHAR}
        </if>
        <if test="'check_status'.toString() == column.value">
          #{item.checkStatus,jdbcType=INTEGER}
        </if>
        <if test="'check_reason'.toString() == column.value">
          #{item.checkReason,jdbcType=VARCHAR}
        </if>
        <if test="'join_jd_pin'.toString() == column.value">
          #{item.joinJdPin,jdbcType=VARCHAR}
        </if>
        <if test="'join_link'.toString() == column.value">
          #{item.joinLink,jdbcType=VARCHAR}
        </if>
        <if test="'join_time'.toString() == column.value">
          #{item.joinTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'join_order'.toString() == column.value">
          #{item.joinOrder,jdbcType=VARCHAR}
        </if>
        <if test="'open_jd_credit_pin'.toString() == column.value">
          #{item.openJdCreditPin,jdbcType=VARCHAR}
        </if>
        <if test="'open_jd_credit_url'.toString() == column.value">
          #{item.openJdCreditUrl,jdbcType=VARCHAR}
        </if>
        <if test="'open_jd_credit_time'.toString() == column.value">
          #{item.openJdCreditTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'open_jd_credit_type'.toString() == column.value">
          #{item.openJdCreditType,jdbcType=INTEGER}
        </if>
        <if test="'jd_credit_first_order_no'.toString() == column.value">
          #{item.jdCreditFirstOrderNo,jdbcType=VARCHAR}
        </if>
        <if test="'jd_credit_first_order_pin'.toString() == column.value">
          #{item.jdCreditFirstOrderPin,jdbcType=VARCHAR}
        </if>
        <if test="'jd_credit_first_order_time'.toString() == column.value">
          #{item.jdCreditFirstOrderTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'jd_credit_first_order_url'.toString() == column.value">
          #{item.jdCreditFirstOrderUrl,jdbcType=VARCHAR}
        </if>
        <if test="'bank_and_order_no'.toString() == column.value">
          #{item.bankAndOrderNo,jdbcType=VARCHAR}
        </if>
        <if test="'bank_and_pin'.toString() == column.value">
          #{item.bankAndPin,jdbcType=VARCHAR}
        </if>
        <if test="'bank_and_income_money'.toString() == column.value">
          #{item.bankAndIncomeMoney,jdbcType=VARCHAR}
        </if>
        <if test="'bank_and_income_time'.toString() == column.value">
          #{item.bankAndIncomeTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'bank_and_promote_url'.toString() == column.value">
          #{item.bankAndPromoteUrl,jdbcType=VARCHAR}
        </if>
        <if test="'joined_first_order_with_jd_credit_time_difference'.toString() == column.value">
          #{item.joinedFirstOrderWithJdCreditTimeDifference,jdbcType=VARCHAR}
        </if>
        <if test="'joined_first_order_with_bank_income_time_difference'.toString() == column.value">
          #{item.joinedFirstOrderWithBankIncomeTimeDifference,jdbcType=VARCHAR}
        </if>
        <if test="'jd_credit_open_one_day'.toString() == column.value">
          #{item.jdCreditOpenOneDay,jdbcType=INTEGER}
        </if>
        <if test="'newbie_package_oper_time'.toString() == column.value">
          #{item.newbiePackageOperTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'newbie_package_pin'.toString() == column.value">
          #{item.newbiePackagePin,jdbcType=VARCHAR}
        </if>
        <if test="'newbie_package_url_id'.toString() == column.value">
          #{item.newbiePackageUrlId,jdbcType=VARCHAR}
        </if>
        <if test="'newbie_package_result'.toString() == column.value">
          #{item.newbiePackageResult,jdbcType=INTEGER}
        </if>
        <if test="'jd_gold_order_no'.toString() == column.value">
          #{item.jdGoldOrderNo,jdbcType=VARCHAR}
        </if>
        <if test="'jd_gold_is_first'.toString() == column.value">
          #{item.jdGoldIsFirst,jdbcType=INTEGER}
        </if>
        <if test="'jd_gold_confirm_time'.toString() == column.value">
          #{item.jdGoldConfirmTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'jd_new_hand_reward_id'.toString() == column.value">
          #{item.jdNewHandRewardId,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=VARCHAR}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=VARCHAR}
        </if>
        <if test="'task_id'.toString() == column.value">
          #{item.taskId,jdbcType=VARCHAR}
        </if>
        <if test="'salesman_id'.toString() == column.value">
          #{item.salesmanId,jdbcType=VARCHAR}
        </if>
        <if test="'reward'.toString() == column.value">
          #{item.reward,jdbcType=DECIMAL}
        </if>
        <if test="'channel_below'.toString() == column.value">
          #{item.channelBelow,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>