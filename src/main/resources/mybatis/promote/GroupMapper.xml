<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autuan.project.promote.group.mapper.GroupMapper">
    
    <resultMap type="Group" id="GroupResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="groupHeader"    column="group_header"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="headerName"    column="header_name"    />
        <result property="headerMobile"    column="header_mobile"    />
    </resultMap>

    <sql id="selectGroupVo">
        select id, name, group_header, create_time, update_time, create_by, update_by, header_name, header_mobile from tab_group
    </sql>

    <select id="selectGroupList" parameterType="Group" resultMap="GroupResult">
        <include refid="selectGroupVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="groupHeader != null  and groupHeader != ''"> and group_header = #{groupHeader}</if>
            <if test="headerName != null  and headerName != ''"> and header_name like concat('%', #{headerName}, '%')</if>
            <if test="headerMobile != null  and headerMobile != ''"> and header_mobile = #{headerMobile}</if>
        </where>
    </select>
    
    <select id="selectGroupById" parameterType="String" resultMap="GroupResult">
        <include refid="selectGroupVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertGroup" parameterType="Group">
        insert into tab_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null  and id != ''">id,</if>
            <if test="name != null  and name != ''">name,</if>
            <if test="groupHeader != null  and groupHeader != ''">group_header,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="headerName != null  and headerName != ''">header_name,</if>
            <if test="headerMobile != null  and headerMobile != ''">header_mobile,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null  and id != ''">#{id},</if>
            <if test="name != null  and name != ''">#{name},</if>
            <if test="groupHeader != null  and groupHeader != ''">#{groupHeader},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="headerName != null  and headerName != ''">#{headerName},</if>
            <if test="headerMobile != null  and headerMobile != ''">#{headerMobile},</if>
         </trim>
    </insert>

    <update id="updateGroup" parameterType="Group">
        update tab_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="groupHeader != null  and groupHeader != ''">group_header = #{groupHeader},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="headerName != null  and headerName != ''">header_name = #{headerName},</if>
            <if test="headerMobile != null  and headerMobile != ''">header_mobile = #{headerMobile},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteGroupById" parameterType="String">
        delete from tab_group where id = #{id}
    </delete>

    <delete id="deleteGroupByIds" parameterType="String">
        delete from tab_group where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>